#Number of occurrence
Given a sorted array, arr[] and a number target, you need to find the number of occurrences of target in arr[]. 
Examples :
Input: arr[] = [1, 1, 2, 2, 2, 2, 3], target = 2
Output: 4
Explanation: target = 2 occurs 4 times in the given array so the output is 4.

// Time Complexity:- O(LogN)
// Space Complexity:- O(1)

class Solution {
    int countFreq(int[] arr, int target) {
        // code here
        int n = arr.length , mid =0,low=0, high=n-1, firstIndex=-1, lastIndex=-1;
        // First to find the first occurrence of the target (`firstIndex`).
        // Second to find the last occurrence of the target (`lastIndex`).
        for(int i=0 ; i<2 ; i++){
            low=0; 
            high=n-1;
            while(low<=high){
                mid=low+(high-low)/2;
                if(arr[mid]==target){
                    if(i==0){  // to find firstIndex
                        firstIndex=mid;
                        high=mid-1;
                    }
                    else{ // to find lastIndex
                        lastIndex=mid;
                        low=mid+1;
                    }
                }
                else if(arr[mid]>target) {
     // If the middle element is greater than the target, search in the left half.
                    high=mid-1;
                }
     // If the middle element is smaller than the target, search in the right half.
                else{
                    low=mid+1;
                }
            }
        }
        if(firstIndex==-1) return 0;
        return lastIndex-firstIndex+1;
    }
}
