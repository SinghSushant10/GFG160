#Sorted and Rotated Minimum
A sorted array of distinct elements arr[] is rotated at some unknown point, the task is to find the minimum element in it. 
Examples:
Input: arr[] = [5, 6, 1, 2, 3, 4]
Output: 1
Explanation: 1 is the minimum element in the array.

TC: O(log n) SC:O(1)
class Solution {
    public int findMin(int[] arr) {
        // complete the function here
        int n = arr.length; 
        int low=0, high=n-1,mid=0;
        while(low<high){
            mid=(low+high)/2;
      // If the middle element is smaller than the element at 'high',
     // it means the minimum lies in the left half or at 'mid'
            if(arr[mid]<arr[high]){
                high=mid;
            }
     // Otherwise, the minimum lies in the right half (excluding 'mid')
            else{
                low=mid+1;
            }
        }
        return arr[low];
    }
}
