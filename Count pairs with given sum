#Count pairs with given sum
Given an array arr[] and an integer target. You have to find numbers of pairs in array arr[] which sums up to given target.
Examples:
Input: arr[] = [1, 5, 7, -1, 5], target = 6 
Output: 3
Explanation: Pairs with sum 6 are (1, 5), (7, -1) and (1, 5). 
Input: arr[] = [1, 1, 1, 1], target = 2 
Output: 6
Explanation: Pairs with sum 2 are (1, 1), (1, 1), (1, 1), (1, 1), (1, 1), (1, 1).

TC: O(n)  SC:O(n) 
class Solution {

    int countPairs(int arr[], int target) {
        // Your code here
        HashMap<Integer,Integer>map = new HashMap<>();
        int ans=0;
        for(int x : arr){
            // Check if the complement (target - x) is already in the map 
           if(map.containsKey(target-x)) {
               //if exist add its frequency to the answer
               ans+= map.get(target-x);
           }
  // If 'x' is already in the map, increment its frequency; otherwise, add it with a frequency of 1
           map.put(x,map.getOrDefault(x,0)+1);
           
        }
        return ans;
    }
}
