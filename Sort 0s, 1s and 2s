#Sort 0s, 1s and 2s
Given an array arr[] containing only 0s, 1s, and 2s. Sort the array in ascending order.
Examples:
Input: arr[] = [0, 1, 2, 0, 1, 2]
Output: [0, 0, 1, 1, 2, 2]
Explanation: 0s 1s and 2s are segregated into ascending order.

TC:O(n) SC: O(1)

class Solution {
    // Function to sort an array of 0s, 1s, and 2s
    public void sort012(int[] arr) {
        // code here
        int zeros=0,ones=0;
        
        //Count the number of 0s and 1s in the array
        for(int i=0;i<arr.length;i++){
            if(arr[i]==0) zeros++;
            else if(arr[i]==1)ones++;
        }
        
        // Update the array based on the counts of 0s, 1s, and 2s
        for(int i=0;i<arr.length;i++){
            if(zeros!=0){
                arr[i]=0;    // Fill 0s in the array
                zeros--;    
            }
            else if(ones!=0){
                arr[i]=1;   // Fill 1s in the array
                ones--;
            }
            else arr[i]=2;  // remaning will be 2 
        }
    }
}
