#Set Matrix Zeroes
You are given a 2D matrix mat[][] of size n√óm. The task is to modify the matrix such that if mat[i][j] is 0, 
all the elements in the i-th row and j-th column are set to 0 and do it in constant space complexity.
Examples:
Input: mat[][] = [[0, 1, 2, 0],
                [3, 4, 5, 2],
                [1, 3, 1, 5]]
Output: [[0, 0, 0, 0],
        [0, 4, 5, 0],
        [0, 3, 1, 0]]
Explanation: mat[0][0] and mat[0][3] are 0s, so all elements in row 0, column 0 and column 3 are updated to zeroes.

TC:O(n*m) SC:(1)

class Solution {
    public void setMatrixZeroes(int[][] mat) {
        int n = mat.length;
        int m = mat[0].length;
        
        // check if first row and first coloumn needed to be zeroed
        boolean firstRowZero = false;
        boolean firstColZero = false;
        
        for(int i=0; i<n ; i++){
            if(mat[i][0]==0){
               firstColZero=true;
               break;
            }
        }
        for(int j=0;j<m;j++){
            if(mat[0][j]==0){
                firstRowZero=true;
                break;
            }
        }
        //mark the rows and coloums to be zeroed 
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                if(mat[i][j]==0){
                    mat[i][0]=0;
                    mat[0][j]=0;
                }
            }
        }
        //set the zero based on markers 
        for(int i=1 ; i<n;i++){
            for(int j=1 ;j<m;j++){
                if(mat[i][0]==0 || mat[0][j]==0){
                    mat[i][j]=0;
                }
            }
        }
        //handle the first row 
        if(firstRowZero){
            for(int j=0;j<m;j++){
                mat[0][j]=0;
            }
        }
        //handle the first coloumn
        if(firstColZero){
            for(int i=0;i<n;i++){
                mat[i][0]=0;
            }
        }
    }
}
