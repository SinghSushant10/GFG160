#Diameter of a Binary Tree

Given a binary tree, the diameter (also known as the width) is defined as the number of edges on the longest path between two leaf nodes in the tree. This path may or may not pass through the root. Your task is to find the diameter of the tree.

Examples:

Input: root[] = [1, 2, 3]

Output: 2
Explanation: The longest path has 2 edges (node 2 -> node 1 -> node 3).

TC:O(n) SC:O(h) 
class Solution {
    private int maxDiameter = 0;

    int diameter(Node root) {
        height(root);
        return maxDiameter;
    }

    // Helper function to compute height and update diameter
    private int height(Node node) {
        if (node == null) return 0;

        // Compute the heights of left and right subtrees
        int leftHeight = height(node.left);
        int rightHeight = height(node.right);

        // Update the diameter: sum of left and right subtree heights
        maxDiameter = Math.max(maxDiameter, leftHeight + rightHeight);

        // Return the height of the current node
        return 1 + Math.max(leftHeight, rightHeight);
    }
}
