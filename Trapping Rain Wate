#Trapping Rain Wate
Given an array arr[] with non-negative integers representing the height of blocks. If the width of each block is 1, compute how much water can be trapped between the blocks during the rainy season. 
Examples:
Input: arr[] = [3, 0, 1, 0, 4, 0 2]
Output: 10
Explanation: Total water trapped = 0 + 3 + 2 + 3 + 0 + 2 + 0 = 10 units.
TC:O(n) SC:O(1)
class Solution {
    public int maxWater(int arr[]) {
        // code here
        int left=0,right=arr.length-1;
        int leftMax=0,rightMax=0;
        int total=0;
        while(left<=right){
            if(arr[left]<=arr[right]){
                if(arr[left]>=leftMax){
                leftMax=arr[left];
                     }
            else{
                total+=leftMax-arr[left];
            }
            left++;
           }
           else{
               if(arr[right]>=rightMax){
                   rightMax=arr[right];
               }
               else{
                   total+=rightMax-arr[right];
               }
               right--;
           }
        }
        return total;
    }
}
