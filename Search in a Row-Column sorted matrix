#Search in a Row-Column sorted matrix

Given a 2D integer matrix mat[][] of size n x m, where every row and column is sorted in increasing order and a number x, the task is to find whether element x is present in the matrix.

Examples:

Input: mat[][] = [[3, 30, 38],[20, 52, 54],[35, 60, 69]], x = 62
Output: false
Explanation: 62 is not present in the matrix, so output is false.


TC: (n+m) O(1)

class Solution {
    public static boolean matSearch(int mat[][], int x) {
        // your code here
        int n =mat.length;  // no of rows 
        int m = mat[0].length; // no of columns 
        
        // start the search from top-corner
        int row=0, col=m-1;
        
        while(row<n && col>=0){
            if(mat[row][col]==x)  return true;
            
      // If the current element is less than the target `x`
            else if(mat[row][col]<x) row++;   // Move to the next row
            
            else col--;    //Move to the previous column
        }
        return false;
    }
}
