Given an integer array citations[], where citations[i] is the number of citations a researcher received for the ith paper. The task is to find the H-index.
H-Index is the largest value such that the researcher has at least H papers that have been cited at least H times.
Examples:
Input: citations[] = [3, 0, 5, 3, 0]
Output: 3
Explanation: There are at least 3 papers (3, 5, 3) with at least 3 citations.


TC:O(n) SC:O(n)

class Solution {
    // Function to find hIndex
    
    public int hIndex(int[] citations) {
        // code here
        int n = citations.length;

        // Frequency array to count the number of papers with citations
        int[] freq = new int[n + 1];

        // Populate the frequency array
        for (int citation : citations) {
            if (citation >= n) {
                // If citations are more than or equal to n, cap at n
                freq[n]++;
            } else {
                // Otherwise, count normally
                freq[citation]++;
            }
        }

        // Calculate the h-index
        int total = 0; // Total papers with at least `h` citations
        for (int h = n; h >= 0; h--) {
            total += freq[h];
            if (total >= h) {
                return h;
            }
        }

        return 0;
    
    }
}
