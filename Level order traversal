#Level order traversal
Given a root of a binary tree with n nodes, the task is to find its level order traversal. Level order traversal of a tree is breadth-first traversal for the tree.

Examples:

Input: root[] = [1, 2, 3]

Output: [[1], [2, 3]]

TC:O(n) SC:O(n) 
class Solution {
    public ArrayList<ArrayList<Integer>> levelOrder(Node root) {
        // Your code here
        
        ArrayList<ArrayList<Integer>> result = new ArrayList<>();
        if(root==null) return result;
        Queue<Node> queue = new LinkedList<>();
        queue.offer(root);
        while(!queue.isEmpty()){
            int size=queue.size();
            ArrayList<Integer> ans = new ArrayList<>();
            for(int i=0;i<size;i++){
                Node curr = queue.poll();
                ans.add(curr.data);
                if(curr.left!=null) queue.offer(curr.left);
                if(curr.right!=null) queue.offer(curr.right);
            }
            result.add(ans);
        }
        return result;
    }
}
